
plugins {
    id 'java-library'
    id 'maven-publish'
}

repositories {
    ivy {
        name 'ivyPromReleases'
        patternLayout{
            artifact '[organisation]/Releases/Packages/[module]/[revision]/[artifact]-[revision].[ext]'
            ivy '[organisation]/Releases/Packages/[module]/[revision]/ivy.xml'
        }
        url = uri('https://svn.win.tue.nl/repos')
        content {
            includeGroup "prom"
        }
    }
    ivy {
        name 'ivyPromLibraries'
        patternLayout{
            artifact '[module]/[revision]/[artifact]-[revision].[ext]'
            ivy '[module]/[revision]/ivy.xml'
        }
        url = uri('https://svn.win.tue.nl/repos/prom/Libraries')
    }
    mavenCentral()
}

dependencies {
    // Latest is implementation 'prom:StochasticPetriNets:6.10.170'
    // but resolving that in the prom repo is not working, probably because 
    // they are zip files not in a specific revision directory
    api 'prom:StochasticPetriNets:latest'
    api 'org.apache.logging.log4j:log4j-api:2.8.2' 
    api 'org.apache.logging.log4j:log4j-core:2.8.2'
    api 'org.simpleframework:simple-xml:2.7.1'
    testImplementation 'junit:junit:4.11'
}

java{
    withSourcesJar()
}

group = 'qut.pm'
version = '0.8.7'
description = 'prom-helpers'
sourceCompatibility = '1.8'

task(pnmlToDot, dependsOn: 'classes', type: JavaExec) {
   main 'qut.pm.prom.helpers.PetriNetConverter'
   classpath sourceSets.main.runtimeClasspath
   args '-v -i PNML'
}

task(xesConverter, dependsOn: 'classes', type: JavaExec) {
   main 'qut.pm.xes.helpers.XESConverterCommandLine'
   classpath sourceSets.main.runtimeClasspath
   jvmArgs '-Dlog4j.configurationFile=config/static/log4j2.xml'
}


publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/adamburkegh/prom-helpers")
            credentials {
                username = "adamburkegh"
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

